<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sySAAEyUwB9HdeBVG6Cn/5YITp06pW/pJfxmSQABGCmBNXLwcK3sL6uyyv8Kqao+aIW/iPAbKAEEYKgE
        lr68RgqL91vlf6nkbM9jnd9ACVzZ+zYEYKoEeibfIYuWr5K1X2yQYZkzrfAnERzDJKD+HgEYLoHeqZP0
        D4XAmCkBBGA4na0fxt9uHokEDJUAAgANEjBTAggAkIDBEkAAgAQMlgACACRgsAQQACABQyVw1U3DEQAg
        AZNBAIAEEAAAEkAAAEgAAQAgAQQAgAQQAAASQAAASAABACABBACABBAAABJAAIAEkAACACSABBAAIAHC
        hQAACRAwBABIABAAIAFAAIAEAAEAEgAEAEgAEAAgAUAAgAQAAQASAAQASAAQACABQACABAABABIABABI
        ABAAIAFAAIAEAAEAEgAEAEgAEAAgAUAAgAQAAQASAAQASAAQACABQACABBAAPypAAggAAAkgAAAkgAAA
        kAACAEACCAAACSAAACSAAACQAAIAQAIIAAAJIAAAJIAAAJAAAgBAAggAAAkgAAAkgAAAkAACAEACCAAA
        CSAAACSAAACQAAIAQAIIAAAJIAAAJIAAAByiS9J4ubrPCKME8H92UXDCH7gbpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>